AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an EC2 Instance Connect endpoint

Parameters:
  PrivateSubnetIdAZ2:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the private subnet in AZ2
  EICEServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ID of the security group for the EC2 Instance Connect service

Resources:
  EnableInstanceConnectLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3

          def handler(event, context):
              ec2_client = boto3.client('ec2')
              response = ec2_client.modify_vpc_attribute(
                  VpcId=event['VpcId'],
                  EnableDnsSupport={'Value': True}
              )
              response = ec2_client.modify_instance_attribute(
                  InstanceId=event['InstanceId'],
                  SourceDestCheck={'Value': False}
              )
              return response
      Runtime: python3.8

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt EnableInstanceConnectLambdaFunction.Arn
      Principal: ec2.amazonaws.com

Outputs:
  LambdaFunctionArn:
    Description: ARN of the Lambda function to enable Instance Connect
    Value: !GetAtt EnableInstanceConnectLambdaFunction.Arn
